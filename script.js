// –î–∞–Ω–Ω—ã–µ –∫—É—Ä—Å–∞
const courseData = {
    modules: [
        {
            id: 0,
            title: "–í–≤–µ–¥–µ–Ω–∏–µ",
            description: "–ö—Ä–∞—Ç–∫–æ —Ä–∞—Å—Å–∫–∞–∂–µ–º –æ —Ç–æ–º, —á—Ç–æ –≤–∞—Å –∂–¥–µ—Ç –Ω–∞ —ç—Ç–æ–º –º–∏–Ω–∏-–∫—É—Ä—Å–µ",
            totalLessons: 5,
            estimatedTime: "15 –º–∏–Ω",
            lessons: [
                {
                    id: 1,
                    title: "–û –∫—É—Ä—Å–µ",
                    description: "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏–Ω–∏-–∫—É—Ä—Å –ø–æ –æ—Å–Ω–æ–≤–∞–º —Ä–∞–±–æ—Ç—ã —Å ChatGPT",
                    estimatedTime: 3,
                    difficulty: 'easy',
                    content: {
                        title: "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏–Ω–∏-–∫—É—Ä—Å –ø–æ –æ—Å–Ω–æ–≤–∞–º —Ä–∞–±–æ—Ç—ã —Å ChatGPT",
                        objectives: [
                            "–†–∞–∑–±–µ—Ä–µ—Ç–µ—Å—å, –∫–∞–∫ —É—Å—Ç—Ä–æ–µ–Ω ChatGPT",
                            "–ù–∞—É—á–∏—Ç–µ—Å—å —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã (–ø—Ä–æ–º—Ç—ã)",
                            "–ü–æ–ª—É—á–∏—Ç–µ –Ω–∞–±–æ—Ä –≥–æ—Ç–æ–≤—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤ –∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø—Ä–∏–º–µ—Ä–æ–≤",
                            "–í–Ω–µ–¥—Ä–∏—Ç–µ –ò–ò –≤ –æ–¥–Ω—É –∏–∑ —Å–≤–æ–∏—Ö —Ä–µ–∞–ª—å–Ω—ã—Ö –∑–∞–¥–∞—á",
                            "–ù–∞—á–Ω—ë—Ç–µ —ç–∫–æ–Ω–æ–º–∏—Ç—å –≤—Ä–µ–º—è –∏ –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —É–≤–µ—Ä–µ–Ω–Ω–µ–µ"
                        ],
                        sections: []
                    }
                },
                {
                    id: 2,
                    title: "–ö—É—Ä—Å –ø–æ–º–æ–∂–µ—Ç –≤–∞–º",
                    description: "–£–∑–Ω–∞–π—Ç–µ, –∫–∞–∫–∏–µ –Ω–∞–≤—ã–∫–∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –ø–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∫—É—Ä—Å–∞",
                    estimatedTime: 3,
                    difficulty: 'easy',
                    content: {
                        title: "–ö–£–†–° –ü–û–ú–û–ñ–ï–¢ –í–ê–ú:",
                        objectives: [
                            "–ò–∑—É—á–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ ChatGPT",
                            "–ù–∞—É—á–∏—Ç—å—Å—è —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã"
                        ],
                        sections: [
                            {
                                type: 'text',
                                content: '‚Ä¢ –†–∞–∑–æ–±—Ä–∞—Ç—å—Å—è, —á—Ç–æ —Ç–∞–∫–æ–µ ChatGPT –∏ –∫–∞–∫ –æ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç\n\n‚Ä¢ –ù–∞—É—á–∏—Ç—å—Å—è —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã (–ø—Ä–æ–º–ø—Ç—ã)\n\n‚Ä¢ –£–≤–∏–¥–µ—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ\n\n‚Ä¢ –ü—Ä–µ–æ–¥–æ–ª–µ—Ç—å —Å—Ç—Ä–∞—Ö, –Ω–µ—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –∏ –æ—â—É—â–µ–Ω–∏–µ, —á—Ç–æ —ç—Ç–æ –Ω–µ –¥–ª—è –º–µ–Ω—è\n\n‚Ä¢ –û—Å–≤–æ–∏—Ç—å ChatGPT –∑–∞ 1 –≤–µ—á–µ—Ä ‚Äì –±–µ–∑ –ª–∏—à–Ω–µ–π —Ç–µ–æ—Ä–∏–∏ –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏'
                            }
                        ]
                    }
                },
                {
                    id: 3,
                    title: "–≠—Ç–æ—Ç –∫—É—Ä—Å –¥–ª—è –≤–∞—Å, –µ—Å–ª–∏ –≤—ã...",
                    description: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –ø–æ–¥—Ö–æ–¥–∏—Ç –ª–∏ –≤–∞–º —ç—Ç–æ—Ç –∫—É—Ä—Å",
                    estimatedTime: 3,
                    difficulty: 'easy',
                    content: {
                        title: "–≠–¢–û–¢ –ö–£–†–° –î–õ–Ø –í–ê–°, –ï–°–õ–ò –í–´...",
                        objectives: [
                            "–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ü–µ–ª–µ–≤—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é –∫—É—Ä—Å–∞"
                        ],
                        sections: [
                            {
                                type: 'text',
                                content: 'üëâ –£–∂–µ —Å–ª—ã—à–∞–ª–∏ –ø—Ä–æ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏, –Ω–æ –Ω–µ –ø–æ–Ω–∏–º–∞–µ—Ç–µ —Å —á–µ–≥–æ –Ω–∞—á–∞—Ç—å\n\nüëâ –ò—â–µ—Ç–µ –ø—Ä–æ—Å—Ç–æ–µ –∏ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ\n\nüëâ –•–æ—Ç–∏—Ç–µ –±—ã—Ç—å –≤ —Ç–µ–º–µ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ò–ò –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ\n\nüëâ –ù–µ –≥–æ—Ç–æ–≤—ã —Ç—Ä–∞—Ç–∏—Ç—å –º–µ—Å—è—Ü—ã –Ω–∞ –∏–∑—É—á–µ–Ω–∏–µ –∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç —É–∂–µ —Å–µ–≥–æ–¥–Ω—è'
                            }
                        ]
                    }
                },
                {
                    id: 4,
                    title: "–í –∫—É—Ä—Å–µ —á–µ—Ç—ã—Ä–µ –º–æ–¥—É–ª—è",
                    description: "–û–±–∑–æ—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ–±—É—á–µ–Ω–∏—è",
                    estimatedTime: 3,
                    difficulty: 'easy',
                    content: {
                        title: "–í –ö–£–†–°–ï –ß–ï–¢–´–†–ï –ú–û–î–£–õ–Ø:",
                        objectives: [
                            "–ò–∑—É—á–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫—É—Ä—Å–∞"
                        ],
                        sections: [
                            {
                                type: 'text',
                                content: '1Ô∏è‚É£ –î–û–°–¢–£–ü –∫ ChatGPT\n- - - –∫–∞–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è, –æ–±–æ–π—Ç–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∏ –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è\n\n2Ô∏è‚É£ –û–°–ù–û–í–´ ChatGPT\n- - - –∫–∞–∫ –æ–Ω —É—Å—Ç—Ä–æ–µ–Ω –∏ –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã (–ø—Ä–æ–º–ø—Ç—ã)\n\n3Ô∏è‚É£ ChatGPT PRO\n- - - –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –ø—Ä–æ–º–ø—Ç–∏–Ω–≥–∞, —à–∞–±–ª–æ–Ω—ã, –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è CRAFT\n\n4Ô∏è‚É£ ChatGPT MASTER\n- - - —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏, –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –¥—Ä—É–≥–∏–µ –ò–ò-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã'
                            }
                        ]
                    }
                },
                {
                    id: 5,
                    title: "–ì–æ—Ç–æ–≤—ã –ø—Ä–∏—Å—Ç—É–ø–∞—Ç—å?",
                    description: "–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤–≤–æ–¥–Ω–æ–≥–æ –º–æ–¥—É–ª—è",
                    estimatedTime: 3,
                    difficulty: 'easy',
                    content: {
                        title: "–ì–û–¢–û–í–´ –ü–†–ò–°–¢–£–ü–ê–¢–¨?",
                        objectives: [
                            "–ú–æ—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –Ω–∞—á–∞–ª–æ –æ–±—É—á–µ–Ω–∏—è"
                        ],
                        sections: [
                            {
                                type: 'text',
                                content: '–í—Å–µ–≥–æ 1.5‚Äì2 —á–∞—Å–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —ç—Ç–æ–≥–æ –∫—É—Ä—Å–∞ –≤—ã —É–≤–µ—Ä–µ–Ω–Ω–æ –Ω–∞—É—á–∏—Ç–µ—Å—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å ChatGPT –∫–∞–∫ –ª–∏—á–Ω–æ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞ –∏ –≤–µ—Ä–Ω–æ–≥–æ —Å–æ—é–∑–Ω–∏–∫–∞ üëç\n\nüëâ –ì–û–¢–û–í–´ –ü–†–ò–°–¢–£–ü–ê–¢–¨?\n\n–¢–æ–≥–¥–∞ —Å–∫–æ—Ä–µ–µ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –≤ –ø–µ—Ä–≤—ã–π –º–æ–¥—É–ª—å –∏ —É–∂–µ —Å–µ–≥–æ–¥–Ω—è –Ω–∞—á—Ç–∏—Ç–µ –ø–æ–≥—Ä—É–∂–∞—Ç—å—Å—è –≤ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã–π –º–∏—Ä –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ ü§ñü§Ø'
                            }
                        ]
                    }
                }
            ]
        },
        {
            id: 1,
            title: "–î–æ—Å—Ç—É–ø –∫ ChatGPT",
            description: "–°–ø–æ—Å–æ–±—ã –¥–æ—Å—Ç—É–ø–∞, —Ç–∞—Ä–∏—Ñ—ã, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –≤–µ—Ä—Å–∏–∏",
            totalLessons: 18,
            estimatedTime: "45 –º–∏–Ω",
            lessons: [
                {
                    id: 6,
                    title: "–ß—Ç–æ —Ç–∞–∫–æ–µ ChatGPT",
                    description: "–û—Å–Ω–æ–≤—ã –ø–æ–Ω–∏–º–∞–Ω–∏—è –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞",
                    estimatedTime: 5,
                    difficulty: 'easy',
                    content: {
                        title: "–ß—Ç–æ —Ç–∞–∫–æ–µ ChatGPT",
                        objectives: ["–ü–æ–Ω—è—Ç—å –æ—Å–Ω–æ–≤—ã —Ä–∞–±–æ—Ç—ã ChatGPT"],
                        sections: [
                            {
                                type: 'text',
                                content: 'ChatGPT ‚Äî —ç—Ç–æ —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω—ã–π –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –ø–æ–Ω–∏–º–∞—Ç—å –∏ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —á–µ–ª–æ–≤–µ–∫–æ–ø–æ–¥–æ–±–Ω—ã–π —Ç–µ–∫—Å—Ç. –û–Ω —Å–æ–∑–¥–∞–Ω –∫–æ–º–ø–∞–Ω–∏–µ–π OpenAI –∏ –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ GPT (Generative Pre-trained Transformer).'
                            }
                        ]
                    }
                }
            ]
        },
        {
            id: 2,
            title: "–û—Å–Ω–æ–≤—ã ChatGPT",
            description: "–ö–∞–∫ —É—Å—Ç—Ä–æ–µ–Ω ChatGPT –∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤",
            totalLessons: 12,
            estimatedTime: "30 –º–∏–Ω",
            lessons: []
        },
        {
            id: 3,
            title: "ChatGPT PRO",
            description: "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –ø—Ä–æ–º–ø—Ç–∏–Ω–≥–∞ –∏ –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è CRAFT",
            totalLessons: 15,
            estimatedTime: "35 –º–∏–Ω",
            lessons: []
        }
    ]
};

// –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
let currentState = {
    currentModuleId: 0,
    currentLessonId: 1,
    progress: {},
    chatMessages: [],
    isSidebarOpen: true,
    isChatOpen: false
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', function() {
    initializeApp();
    setupEventListeners();
    loadLesson();
});

function initializeApp() {
    // –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∏–∑ localStorage
    const savedProgress = localStorage.getItem('chatgpt-course-progress');
    if (savedProgress) {
        currentState.progress = JSON.parse(savedProgress);
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —ç–∫—Ä–∞–Ω–∞
    checkScreenSize();
    window.addEventListener('resize', checkScreenSize);
}

function checkScreenSize() {
    const isMobile = window.innerWidth <= 1024;
    const sidebar = document.getElementById('sidebar');
    const chatPanel = document.getElementById('chat-panel');
    
    if (isMobile) {
        sidebar.classList.add('hidden');
        currentState.isSidebarOpen = false;
    } else {
        sidebar.classList.remove('hidden');
        currentState.isSidebarOpen = true;
    }
}

function setupEventListeners() {
    // –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –º–æ–¥—É–ª—è–º
    document.querySelectorAll('.module-item').forEach(item => {
        item.addEventListener('click', function() {
            const moduleId = parseInt(this.dataset.module);
            selectModule(moduleId);
        });
    });
    
    // –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —É—Ä–æ–∫–∞–º
    document.getElementById('prev-lesson').addEventListener('click', previousLesson);
    document.getElementById('next-lesson').addEventListener('click', nextLesson);
    
    // –ú–µ–Ω—é –∏ —Å–∞–π–¥–±–∞—Ä
    document.getElementById('menu-btn').addEventListener('click', toggleSidebar);
    document.getElementById('close-sidebar').addEventListener('click', toggleSidebar);
    document.getElementById('mobile-menu').addEventListener('click', toggleSidebar);
    
    // –ß–∞—Ç
    document.getElementById('chat-toggle').addEventListener('click', toggleChat);
    document.getElementById('send-message').addEventListener('click', sendMessage);
    document.getElementById('chat-input').addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
            sendMessage();
        }
    });
}

function selectModule(moduleId) {
    const module = courseData.modules.find(m => m.id === moduleId);
    if (!module || module.lessons.length === 0) return;
    
    currentState.currentModuleId = moduleId;
    currentState.currentLessonId = module.lessons[0].id;
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –º–æ–¥—É–ª—è
    document.querySelectorAll('.module-item').forEach(item => {
        item.classList.remove('active');
    });
    document.querySelector(`[data-module="${moduleId}"]`).classList.add('active');
    
    loadLesson();
}

function loadLesson() {
    const module = courseData.modules.find(m => m.id === currentState.currentModuleId);
    const lesson = module?.lessons.find(l => l.id === currentState.currentLessonId);
    
    if (!lesson) return;
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ö–ª–µ–±–Ω—ã—Ö –∫—Ä–æ—à–µ–∫
    document.getElementById('current-module').textContent = module.title;
    document.getElementById('current-lesson').textContent = lesson.title;
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —É—Ä–æ–∫–∞
    document.getElementById('lesson-title').textContent = lesson.content.title;
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ—Ç–∞–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    const lessonIndex = module.lessons.findIndex(l => l.id === currentState.currentLessonId);
    document.getElementById('lesson-current').textContent = lessonIndex + 1;
    document.getElementById('lesson-total').textContent = module.lessons.length;
    
    const timeElement = document.querySelector('.lesson-time');
    timeElement.textContent = `‚è± ${lesson.estimatedTime} –º–∏–Ω`;
    
    const difficultyElement = document.querySelector('.lesson-difficulty');
    difficultyElement.className = `lesson-difficulty ${lesson.difficulty}`;
    difficultyElement.textContent = getDifficultyText(lesson.difficulty);
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–ª–µ–π —É—Ä–æ–∫–∞
    const objectivesList = document.getElementById('objectives-list');
    objectivesList.innerHTML = '';
    lesson.content.objectives.forEach(objective => {
        const li = document.createElement('li');
        li.textContent = objective;
        objectivesList.appendChild(li);
    });
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —É—Ä–æ–∫–∞
    updateLessonContent(lesson.content.sections);
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    updateNavigation(module, lessonIndex);
    
    // –û—Ç–º–µ—Ç–∫–∞ —É—Ä–æ–∫–∞ –∫–∞–∫ –ø—Ä–æ–π–¥–µ–Ω–Ω–æ–≥–æ
    markLessonAsCompleted();
    updateProgress();
}

function updateLessonContent(sections) {
    const lessonBody = document.getElementById('lesson-body');
    const objectivesDiv = lessonBody.querySelector('.objectives');
    
    // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ä–∞–∑–¥–µ–ª—ã –∫—Ä–æ–º–µ —Ü–µ–ª–µ–π
    const sectionsToRemove = lessonBody.querySelectorAll('.lesson-section');
    sectionsToRemove.forEach(section => section.remove());
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Ä–∞–∑–¥–µ–ª—ã
    sections.forEach(section => {
        const sectionDiv = document.createElement('div');
        sectionDiv.className = 'lesson-section';
        
        if (section.title) {
            const title = document.createElement('h3');
            title.textContent = section.title;
            sectionDiv.appendChild(title);
        }
        
        if (section.type === 'text') {
            const content = document.createElement('div');
            content.innerHTML = section.content.replace(/\n\n/g, '</p><p>').replace(/^/, '<p>').replace(/$/, '</p>');
            sectionDiv.appendChild(content);
        } else if (section.type === 'image' && section.imageUrl) {
            const img = document.createElement('img');
            img.src = section.imageUrl;
            img.alt = section.title || '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Ä–æ–∫–∞';
            img.className = 'lesson-image';
            sectionDiv.appendChild(img);
        }
        
        lessonBody.appendChild(sectionDiv);
    });
}

function updateNavigation(module, lessonIndex) {
    const prevBtn = document.getElementById('prev-lesson');
    const nextBtn = document.getElementById('next-lesson');
    
    prevBtn.disabled = lessonIndex === 0;
    nextBtn.disabled = lessonIndex === module.lessons.length - 1;
}

function previousLesson() {
    const module = courseData.modules.find(m => m.id === currentState.currentModuleId);
    const lessonIndex = module.lessons.findIndex(l => l.id === currentState.currentLessonId);
    
    if (lessonIndex > 0) {
        currentState.currentLessonId = module.lessons[lessonIndex - 1].id;
        loadLesson();
    }
}

function nextLesson() {
    const module = courseData.modules.find(m => m.id === currentState.currentModuleId);
    const lessonIndex = module.lessons.findIndex(l => l.id === currentState.currentLessonId);
    
    if (lessonIndex < module.lessons.length - 1) {
        currentState.currentLessonId = module.lessons[lessonIndex + 1].id;
        loadLesson();
    }
}

function toggleSidebar() {
    const sidebar = document.getElementById('sidebar');
    currentState.isSidebarOpen = !currentState.isSidebarOpen;
    
    if (currentState.isSidebarOpen) {
        sidebar.classList.remove('hidden');
        sidebar.classList.add('show');
    } else {
        sidebar.classList.add('hidden');
        sidebar.classList.remove('show');
    }
}

function toggleChat() {
    const chatPanel = document.getElementById('chat-panel');
    currentState.isChatOpen = !currentState.isChatOpen;
    
    if (currentState.isChatOpen) {
        chatPanel.classList.remove('hidden');
        chatPanel.classList.add('show');
    } else {
        chatPanel.classList.add('hidden');
        chatPanel.classList.remove('show');
    }
}

function sendMessage() {
    const input = document.getElementById('chat-input');
    const message = input.value.trim();
    
    if (!message) return;
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    addChatMessage(message, 'user');
    input.value = '';
    
    // –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –ò–ò
    setTimeout(() => {
        const responses = [
            "–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å! –í –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —ç—Ç–æ–≥–æ —É—Ä–æ–∫–∞ –≤–∞–∂–Ω–æ –ø–æ–Ω–∏–º–∞—Ç—å, —á—Ç–æ ChatGPT —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –±–æ–ª—å—à–∏—Ö —è–∑—ã–∫–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π.",
            "–≠—Ç–æ —Å–≤—è–∑–∞–Ω–æ —Å —Ç–µ–º, –∫–∞–∫ –º—ã —Ñ–æ—Ä–º—É–ª–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –±—ã—Ç—å –±–æ–ª–µ–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –≤ –≤–∞—à–∏—Ö –ø—Ä–æ–º–ø—Ç–∞—Ö.",
            "–†–µ–∫–æ–º–µ–Ω–¥—É—é –ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å—Å—è —Å —Ä–∞–∑–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –∑–∞–ø—Ä–æ—Å–æ–≤, —á—Ç–æ–±—ã –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ ChatGPT.",
            "–•–æ—Ä–æ—à–∏–π –≤–æ–ø—Ä–æ—Å! –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –ª—É—á—à–µ —É—Å–≤–æ–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª —É—Ä–æ–∫–∞."
        ];
        
        const randomResponse = responses[Math.floor(Math.random() * responses.length)];
        addChatMessage(randomResponse, 'assistant');
    }, 1000);
}

function addChatMessage(content, role) {
    const messagesContainer = document.getElementById('chat-messages');
    
    const messageDiv = document.createElement('div');
    messageDiv.className = `chat-message ${role} chat-message-enter`;
    
    const contentDiv = document.createElement('div');
    contentDiv.className = 'message-content';
    contentDiv.textContent = content;
    
    messageDiv.appendChild(contentDiv);
    messagesContainer.appendChild(messageDiv);
    
    // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
    messagesContainer.scrollTop = messagesContainer.scrollHeight;
    
    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    currentState.chatMessages.push({ content, role, timestamp: Date.now() });
}

function markLessonAsCompleted() {
    const key = `${currentState.currentModuleId}-${currentState.currentLessonId}`;
    currentState.progress[key] = {
        completed: true,
        completedAt: new Date().toISOString(),
        timeSpent: 0
    };
    
    saveProgress();
}

function updateProgress() {
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—â–µ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    const totalLessons = courseData.modules.reduce((sum, module) => sum + module.lessons.length, 0);
    const completedLessons = Object.keys(currentState.progress).length;
    const overallProgress = totalLessons > 0 ? Math.round((completedLessons / totalLessons) * 100) : 0;
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    const progressFill = document.querySelector('.top-bar .progress-fill');
    const progressPercent = document.querySelector('.progress-percent');
    
    if (progressFill) progressFill.style.width = `${overallProgress}%`;
    if (progressPercent) progressPercent.textContent = `${overallProgress}%`;
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –º–æ–¥—É–ª–µ–π
    courseData.modules.forEach(module => {
        const moduleProgress = calculateModuleProgress(module);
        const moduleElement = document.querySelector(`[data-module="${module.id}"] .progress-fill`);
        if (moduleElement) {
            moduleElement.style.width = `${moduleProgress}%`;
        }
    });
}

function calculateModuleProgress(module) {
    const completedInModule = module.lessons.filter(lesson => {
        const key = `${module.id}-${lesson.id}`;
        return currentState.progress[key]?.completed;
    }).length;
    
    return module.lessons.length > 0 ? Math.round((completedInModule / module.lessons.length) * 100) : 0;
}

function saveProgress() {
    localStorage.setItem('chatgpt-course-progress', JSON.stringify(currentState.progress));
}

function getDifficultyText(difficulty) {
    const difficultyMap = {
        'easy': '–õ–µ–≥–∫–æ',
        'medium': '–°—Ä–µ–¥–Ω–µ',
        'hard': '–°–ª–æ–∂–Ω–æ'
    };
    return difficultyMap[difficulty] || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è —Å–∞–π–¥–±–∞—Ä–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ (–¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤)
document.addEventListener('click', function(e) {
    const sidebar = document.getElementById('sidebar');
    const menuBtn = document.getElementById('menu-btn');
    const mobileMenuBtn = document.getElementById('mobile-menu');
    
    if (window.innerWidth <= 1024 && 
        currentState.isSidebarOpen && 
        !sidebar.contains(e.target) && 
        !menuBtn.contains(e.target) && 
        !mobileMenuBtn.contains(e.target)) {
        toggleSidebar();
    }
});

// –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
setInterval(saveProgress, 30000);
